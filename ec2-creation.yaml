- name: ec2 
  hosts: local
  connection: local
  vars:
    ami: ami-09c813fb71547fc4f
    sg_id: sg-017681bac367675c7
    zone_id: "Z0379910K30ZWY5SALMW"
    domain_name: "gopi29.fun"
    # we can pass through command line also
    #ansible-playbook -i inventory.ini -e "instances=['cart','user','catalogue']"

    # instances:
    # - mongodb
    # - redis
    # - mysql
    # - rabbitmq
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami }}"
      tags:
        name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output

  - name: print the output
    ansible.builtin.debug:
      msg: "{{ ec2_output }}"

  # - name: print public ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  # - name: print private ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  - name: create route53 record
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}" 
      overwrite: true
    loop: "{{ ec2_output.results }}"

# we create route53 record for frontend to public ip
  - name: create route53 record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}" #gopi29.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}" 
      overwrite: true
      when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"

    # excute this playbook with this command
    #ansible-playbook -i inventory.ini ec2-creation.yaml -e "instances=['mongodb','mysql','redis','rabbitmq','user','cart','catalogue','shipping','payment']"
